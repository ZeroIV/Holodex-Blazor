@page "/upcoming"
@using HoloDex_UI.Data
@using Newtonsoft.Json
@inject HoloClient client
@inject NavigationManager NavigationManager

<PageTitle>Live and Upcoming</PageTitle>

<h1>Live & Upcoming by Organization</h1>
<div class="searchDropdwn">
    <select @onchange="OnDropdownChange">
        <option value=null>Selection</option>
        <option value="">All Upcoming</option>
        @foreach (var item in orgs)
        {
            <option value="@item">@item</option>
        }
    </select>
</div>
<button class="btn-search" @onclick="GetStreamsAsync">Search</button>
<br />
@if (videos == null)
{
    <p><em>Please Make a Selection</em></p>
}
else
{
    <div>
    @if (videos.FirstOrDefault() != null)
    {                       
        <h3>Results</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>Channel</th>
                    <th>Title</th>
                    <th>Topic</th>
                    <th>Start Time</th>
                </tr>
            </thead>
            @foreach (var vid in videos)
            {
                <tbody>
                    @if (vid.ActualEnd == null)
                    {
                        string url = "https://www.youtube.com/watch?v=" + @vid.VideoId;
                        <tr class="@vid.Status" @key="vid">
                            <td><img class="channel-img" src=@vid.Channel.PhotoUrl/>@vid.Channel.EngName</td>
                            @*<td><a href=url>@vid.Title</a></td>*@
                            <td><button class="" @onclick=@(() => GetStream(vid.VideoId))>@vid.Title</button></td>
                            <td>@vid.Topic</td>
                            <td>@vid.AvailableAt.ToLocalTime().ToShortDateString() @vid.AvailableAt.ToLocalTime().ToShortTimeString()</td>
                        </tr>
                    }                    
                </tbody>
            }
        </table>
    }
    else
    {
        setContentMessage("No results found");
        <p><em>@contentMessage</em></p>
    }
    </div>
}

    @code {
    private List<Video>? videos;
    private List<string> orgs = new List<string>(Organization.GetOrganizations);

    private string contentMessage = ""; 
    private string? selection;

    protected async Task GetStreamsAsync()
    {
        if (selection != null)
        {
            videos = (List<Video>)await client.GetStreams(selection);
        }
        else
        {
            //error message should displays
        }
    }

    void setContentMessage(string str)
    {
        contentMessage = str;
    }

    void GetStream (string videoId)
    {
        NavigationManager.NavigateTo($"/EmbedVideo/{videoId}", true);
    }

    protected void OnDropdownChange(ChangeEventArgs e)
    {
        selection = e.Value?.ToString();
    }
}
